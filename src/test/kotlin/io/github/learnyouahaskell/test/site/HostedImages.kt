package io.github.learnyouahaskell.test.site

import io.github.learnyouahaskell.test.util.Image

class HostedImages {

    companion object {
        const val IMAGE_ASSETS_URI_PREFIX = "assets/images"
        private fun createImageWithUriPrefix(relativeUri: String, altAttribute: String) = 
            Image.Companion.create("${IMAGE_ASSETS_URI_PREFIX}/${relativeUri}", altAttribute)
    }

    val turtle = createImageWithUriPrefix("faq/turtle.png", "turtle???")
    val bird = createImageWithUriPrefix("introduction/bird.png", "bird")
    val fx = createImageWithUriPrefix("introduction/fx.png", "fx")
    val lazy = createImageWithUriPrefix("introduction/lazy.png", "lazy")
    val boat = createImageWithUriPrefix("introduction/boat.png", "boat")
    val startingOut = createImageWithUriPrefix("starting-out/startingout.png", "egg")
    val ringRing = createImageWithUriPrefix("starting-out/ringring.png", "phoen")
    val baby = createImageWithUriPrefix("starting-out/baby.png", "this is you")
    val list = createImageWithUriPrefix("starting-out/list.png", "BUY A DOG")
    val listMonster = createImageWithUriPrefix("starting-out/listmonster.png", "list monster")
    val cowboy = createImageWithUriPrefix("starting-out/cowboy.png", "draw")
    val kermit = createImageWithUriPrefix("starting-out/kermit.png", "frog")
    val setNotation = createImageWithUriPrefix("starting-out/setnotation.png", "set notation")
    val tuple = createImageWithUriPrefix("starting-out/tuple.png", "tuples")
    val pythagoras = createImageWithUriPrefix("starting-out/pythag.png", "look at meee")
    val cow = createImageWithUriPrefix("types-and-typeclasses/cow.png", "moo")
    val bomb = createImageWithUriPrefix("types-and-typeclasses/bomb.png", "bomb")
    val box = createImageWithUriPrefix("types-and-typeclasses/box.png", "box")
    val classes = createImageWithUriPrefix("types-and-typeclasses/classes.png", "class")
    val pattern = createImageWithUriPrefix("syntax-in-functions/pattern.png", "four!")
    val guards = createImageWithUriPrefix("syntax-in-functions/guards.png", "guards")
    val letItBe = createImageWithUriPrefix("syntax-in-functions/letitbe.png", "let it be")
    val case = createImageWithUriPrefix("syntax-in-functions/case.png", "case")
    val recursion = createImageWithUriPrefix("recursion/recursion.png", "SOVIET RUSSIA")
    val maxS = createImageWithUriPrefix("recursion/maxs.png", "max")
    val painter = createImageWithUriPrefix("recursion/painter.png", "painter")
    val quickMan = createImageWithUriPrefix("recursion/quickman.png", "quickman")
    val quickSort = createImageWithUriPrefix("recursion/quicksort.png", "quicksort")
    val brain = createImageWithUriPrefix("recursion/brain.png", "brain")
    val sun = createImageWithUriPrefix("higher-order-functions/sun.png", "sun")
    val curry = createImageWithUriPrefix("higher-order-functions/curry.png", "haskell curry")
    val bonus = createImageWithUriPrefix("higher-order-functions/bonus.png", "rocktopus")
    val map = createImageWithUriPrefix("higher-order-functions/map.png", "map")
    val lambda = createImageWithUriPrefix("higher-order-functions/lambda.png", "lambda")
    val lamb = createImageWithUriPrefix("higher-order-functions/lamb.png", "lamb")
    val origami = createImageWithUriPrefix("higher-order-functions/origami.png", "folded bird")
    val foldl = createImageWithUriPrefix("higher-order-functions/foldl.png", "foldl")
    val washingMachine = createImageWithUriPrefix("higher-order-functions/washmachine.png", "fold this up!")
    val dollar = createImageWithUriPrefix("higher-order-functions/dollar.png", "dollar")
    val composition = createImageWithUriPrefix("higher-order-functions/composition.png", " (f . g)(x) = f(g(x))")
    val notes = createImageWithUriPrefix("higher-order-functions/notes.png", "notes")
    val modules = createImageWithUriPrefix("modules/modules.png", "modules")
    val legoLists = createImageWithUriPrefix("modules/legolists.png", "shopping lists")
    val legoChar = createImageWithUriPrefix("modules/legochar.png", "lego char")
    val legoMap = createImageWithUriPrefix("modules/legomap.png", "legomap")
    val legoSets = createImageWithUriPrefix("modules/legosets.png", "legosets")
    val makingModules = createImageWithUriPrefix("modules/making_modules.png", "making modules")
    val caveman = createImageWithUriPrefix("making-our-own-types-and-typeclasses/caveman.png", "caveman")
    val record = createImageWithUriPrefix("making-our-own-types-and-typeclasses/record.png", "record")
    val yeti = createImageWithUriPrefix("making-our-own-types-and-typeclasses/yeti.png", "yeti")
    val meerkat = createImageWithUriPrefix("making-our-own-types-and-typeclasses/meekrat.png", "meekrat")
    val gob = createImageWithUriPrefix("making-our-own-types-and-typeclasses/gob.png", "gob")
    val chicken = createImageWithUriPrefix("making-our-own-types-and-typeclasses/chicken.png", "chicken")
    val theFonz = createImageWithUriPrefix("making-our-own-types-and-typeclasses/thefonz.png", "the fonz")
    val binaryTree = createImageWithUriPrefix("making-our-own-types-and-typeclasses/binarytree.png", "binary search tree")
    val trafficLight = createImageWithUriPrefix("making-our-own-types-and-typeclasses/trafficlight.png", "tweet")
    val yesNo = createImageWithUriPrefix("making-our-own-types-and-typeclasses/yesno.png", "yesno")
    val functor = createImageWithUriPrefix("making-our-own-types-and-typeclasses/functor.png", "I AM FUNCTOOOOR!!!")
    val typeFoo = createImageWithUriPrefix("making-our-own-types-and-typeclasses/typefoo.png", "TYPE FOO MASTER")
    val dogNap = createImageWithUriPrefix("input-and-output/dognap.png", "poor dog")
    val helloWorld = createImageWithUriPrefix("input-and-output/helloworld.png", "HELLO!")
    val luggage = createImageWithUriPrefix("input-and-output/luggage.png", "luggage")
    val streams = createImageWithUriPrefix("input-and-output/streams.png", "streams")
    val file = createImageWithUriPrefix("input-and-output/file.png", "A FILE IN A CAKE!!!")
    val edd = createImageWithUriPrefix("input-and-output/edd.png", "butter toast")
    val arguments = createImageWithUriPrefix("input-and-output/arguments.png", "COMMAND LINE ARGUMENTS!!! ARGH")
    val salad = createImageWithUriPrefix("input-and-output/salad.png", "fresh baked salad")
    val random = createImageWithUriPrefix("input-and-output/random.png", "this picture is the ultimate source of randomness and wackiness")
    val jackOfDiamonds = createImageWithUriPrefix("input-and-output/jackofdiamonds.png", "jack of diamonds")
    val chainChomp = createImageWithUriPrefix("input-and-output/chainchomp.png", "like normal string, only they byte ... what a pedestrian pun this is")
    val timber = createImageWithUriPrefix("input-and-output/timber.png", "timberr!!!!")
    val police = createImageWithUriPrefix("input-and-output/police.png", "Stop right there, criminal scum! Nobody breaks the law on my watch! Now pay your fine or it's off to jail.")
    val puppy = createImageWithUriPrefix("input-and-output/puppy.png", "non sequitur")
    val calculator = createImageWithUriPrefix("functionally-solving-problems/calculator.png", "HA HA HA")
    val roads = createImageWithUriPrefix("functionally-solving-problems/roads.png", "Heathrow - London")
    val roadsSimple = createImageWithUriPrefix("functionally-solving-problems/roads_simple.png", "roads")
    val guyCar = createImageWithUriPrefix("functionally-solving-problems/guycar.png", "this is you")
    val frogTor = createImageWithUriPrefix("functors-applicative-functors-and-monoids/frogtor.png", "frogs dont even need money")
    val alien = createImageWithUriPrefix("functors-applicative-functors-and-monoids/alien.png", "w00ooOoooOO")
    val lifter = createImageWithUriPrefix("functors-applicative-functors-and-monoids/lifter.png", "lifting a function is easier than lifting a million pounds")
    val justice = createImageWithUriPrefix("functors-applicative-functors-and-monoids/justice.png", "justice is blind, but so is my dog")
    val present = createImageWithUriPrefix("functors-applicative-functors-and-monoids/present.png", "disregard this analogy")
    val whale = createImageWithUriPrefix("functors-applicative-functors-and-monoids/whale.png", "whale")
    val knight = createImageWithUriPrefix("functors-applicative-functors-and-monoids/knight.png", "ahahahah!")
    val jazzb = createImageWithUriPrefix("functors-applicative-functors-and-monoids/jazzb.png", "SLAP")
    val maoi = createImageWithUriPrefix("functors-applicative-functors-and-monoids/maoi.png", "why so serious?")
    val krakatoa = createImageWithUriPrefix("functors-applicative-functors-and-monoids/krakatoa.png", "wow, very evil")
    val shamrock = createImageWithUriPrefix("functors-applicative-functors-and-monoids/shamrock.png", "top of the morning to ya!!!")
    val pirateShip = createImageWithUriPrefix("functors-applicative-functors-and-monoids/pirateship.png", "wow this is pretty much the gayest pirate ship ever")
    val balloonDog = createImageWithUriPrefix("functors-applicative-functors-and-monoids/balloondog.png", "woof dee do!!!")
    val smug = createImageWithUriPrefix("functors-applicative-functors-and-monoids/smug.png", "smug as hell")
    val bear = createImageWithUriPrefix("functors-applicative-functors-and-monoids/bear.png", "did anyone ORDER pizza?!?! I can't BEAR these puns!")
    val accordion = createImageWithUriPrefix("functors-applicative-functors-and-monoids/accordion.png", "find the visual pun or whatever")
    val smugPig = createImageWithUriPrefix("a-fistful-of-monads/smugpig.png", "more cool than u")
    val buddha = createImageWithUriPrefix("a-fistful-of-monads/buddha.png", "monads, grasshoppa")
    val kid = createImageWithUriPrefix("a-fistful-of-monads/kid.png", "this is you on monads")
    val turtleTwo = createImageWithUriPrefix("a-fistful-of-monads/tur2.png", "hmmm yaes")
    val pierre = createImageWithUriPrefix("a-fistful-of-monads/pierre.png", "pierre")
    val banana = createImageWithUriPrefix("a-fistful-of-monads/banana.png", "iama banana")
    val centaur = createImageWithUriPrefix("a-fistful-of-monads/centaur.png", "john joe glanton")
    val owld = createImageWithUriPrefix("a-fistful-of-monads/owld.png", "90s owl")
    val deadCat = createImageWithUriPrefix("a-fistful-of-monads/deadcat.png", "dead cat")
    val concatMap = createImageWithUriPrefix("a-fistful-of-monads/concatmap.png", "concatmap")
    val chess = createImageWithUriPrefix("a-fistful-of-monads/chess.png", "hee haw im a horse")
    val judgeDog = createImageWithUriPrefix("a-fistful-of-monads/judgedog.png", "the court finds you guilty of peeing all over everything")
    val clintEastwood = createImageWithUriPrefix("for-a-few-monads-more/clint.png", "there are two kinds of people in the world, my friend. those who learn them a haskell and those who have the job of coding java")
    val tuco = createImageWithUriPrefix("for-a-few-monads-more/tuco.png", "when you have to poop, poop, don't talk")
    val angelEyes = createImageWithUriPrefix("for-a-few-monads-more/angeleyes.png", "when you have to poop, poop, don't talk")
    val cactus = createImageWithUriPrefix("for-a-few-monads-more/cactus.png", "cactuses")
    val revolver = createImageWithUriPrefix("for-a-few-monads-more/revolver.png", "bang you're dead")
    val texas = createImageWithUriPrefix("for-a-few-monads-more/texas.png", "don't jest with texas")
    val badge = createImageWithUriPrefix("for-a-few-monads-more/badge.png", "im a cop")
    val wolf = createImageWithUriPrefix("for-a-few-monads-more/wolf.png", "im a cop too")
    val tipi = createImageWithUriPrefix("for-a-few-monads-more/tipi.png", "im a cop too as well also")
    val miner = createImageWithUriPrefix("for-a-few-monads-more/miner.png", "i've found yellow!")
    val spearHead = createImageWithUriPrefix("for-a-few-monads-more/spearhead.png", "kewl")
    val prob = createImageWithUriPrefix("for-a-few-monads-more/prob.png", "probs")
    val ride = createImageWithUriPrefix("for-a-few-monads-more/ride.png", "ride em cowboy")
    val sixtiesDude = createImageWithUriPrefix("zippers/60sdude.png", "hi im chet")
    val pollyWantsA = createImageWithUriPrefix("zippers/pollywantsa.png", "polly says her back hurts")
    val bread = createImageWithUriPrefix("zippers/bread.png", "whoop dee doo")
    val almostZipper = createImageWithUriPrefix("zippers/almostzipper.png", "almostthere")
    val asstronaut = createImageWithUriPrefix("zippers/asstronaut.png", "asstronaut")
    val picard = createImageWithUriPrefix("zippers/picard.png", "the best damn thing")
    val spongeDisk = createImageWithUriPrefix("zippers/spongedisk.png", "spongedisk")
    val cool = createImageWithUriPrefix("zippers/cool.png", "wow cool great")
    val bigTree = createImageWithUriPrefix("zippers/bigtree.png", "falling for you")

    val all: List<Image> = listOf(
        turtle, bird, fx, lazy, boat, startingOut, ringRing, baby, list, listMonster, cowboy, kermit, setNotation,
        tuple, pythagoras, cow, bomb, box, classes, pattern, guards, letItBe, case, recursion, maxS, painter, quickMan,
        quickSort, brain, sun, curry, bonus, map, lambda, lamb, origami, foldl, washingMachine, dollar, composition,
        notes, modules, legoLists, legoChar, legoMap, legoSets, makingModules, caveman, record, yeti, meerkat, gob,
        chicken, theFonz, binaryTree, trafficLight, yesNo, functor, typeFoo, dogNap, helloWorld, luggage, streams,
        file, edd, arguments, salad, random, jackOfDiamonds, chainChomp, timber, police, puppy, calculator, roads,
        roadsSimple, guyCar, frogTor, alien, lifter, justice, present, whale, knight, jazzb, maoi, krakatoa, shamrock,
        pirateShip, balloonDog, smug, bear, accordion, smugPig, buddha, kid, turtleTwo, pierre, banana, centaur, owld,
        deadCat, concatMap, chess, judgeDog, clintEastwood, tuco, angelEyes, cactus, revolver, texas, badge, wolf, tipi,
        miner, spearHead, prob, ride, sixtiesDude, pollyWantsA, bread, almostZipper, asstronaut, picard, spongeDisk,
        cool, bigTree
    )
}